#!/usr/bin/env zsh
# 
# configure
#    Generate a config file
# 

SCRIPT_NAME="flyingpaste/configure"
SCRIPT_VERSION="0.20220905"

# 
# Default values
# 
FLYINGPASTE_INI="${FLYINGPASTE_INI:-flyingpaste.ini}"
CONFIG_OWNDIR=$(realpath $(dirname $0))
CONFIG_SERVICE_URL="http://nopaste.$(hostname -d)"
CONFIG_SERVICE_NAME="Flying Paste"
CONFIG_MYSQL_HOST="localhost"
CONFIG_MYSQL_USER="flyingpaste"
CONFIG_MYSQL_PASSWORD=""
CONFIG_MYSQL_DB="flyingpaste"

# 
# Functions
# 
_ANSI_ESCAPE=$(printf "\e")
_ANSI_RESET="${_ANSI_ESCAPE}[0m"
_ANSI_ATTR_BOLD="${_ANSI_ESCAPE}[1m"
_ANSI_ATTR_ITALIC="${_ANSI_ESCAPE}[3m"
_ANSI_ATTR_UNDERLINE="${_ANSI_ESCAPE}4m"
_ANSI_COLOR_BLACK="${_ANSI_ESCAPE}[0;30m"
_ANSI_COLOR_RED="${_ANSI_ESCAPE}[0;31m"
_ANSI_COLOR_GREEN="${_ANSI_ESCAPE}[0;32m"
_ANSI_COLOR_YELLOW="${_ANSI_ESCAPE}[0;33m"
_ANSI_COLOR_BLUE="${_ANSI_ESCAPE}[0;34m"
_ANSI_COLOR_DARK_MAGENTA="${_ANSI_ESCAPE}[0;35m"
_ANSI_COLOR_DARK_CYAN="${_ANSI_ESCAPE}[0;36m"
_ANSI_COLOR_GREY="${_ANSI_ESCAPE}[0;37m"
_ANSI_COLOR_DARK_GREY="${_ANSI_ESCAPE}[1;30m"
_ANSI_COLOR_LIGHT_RED="${_ANSI_ESCAPE}[1;31m"
_ANSI_COLOR_LIGHT_GREEN="${_ANSI_ESCAPE}[1;32m"
_ANSI_COLOR_LIGHT_YELLOW="${_ANSI_ESCAPE}[1;33m"
_ANSI_COLOR_LIGHT_BLUE="${_ANSI_ESCAPE}[1;34m"
_ANSI_COLOR_MAGENTA="${_ANSI_ESCAPE}[1;35m"
_ANSI_COLOR_CYAN="${_ANSI_ESCAPE}[1;36m"
_ANSI_COLOR_WHITE="${_ANSI_ESCAPE}[1;37m"

_print() {
	printf "$@"
}
_println() {
	printf "$@"
	echo
}
_print_term() {
	if [[ $TERM != "dump" ]]; then
		_print $@
	fi
}
_println_term() {
	if [[ $TERM != "dump" ]]; then
		_println $@
	fi
}
message() {
	_print_term $_ANSI_COLOR_GREEN
	_print "[${SCRIPT_NAME}] "
	_print_term $_ANSI_RESET
	_println $@
}
message_error() {
	(
		_print_term $_ANSI_COLOR_RED
		_print "[${SCRIPT_NAME}] Error: "
		_print_term $_ANSI_RESET
		_println $@
	) >&2
}
message_debug() {
	(
		_print_term $_ANSI_COLOR_YELLOW
		_print "[${SCRIPT_NAME}] [DEBUG] "
		_print_term $_ANSI_RESET
		_println $@
	) >&2
}
message_ask() {
	_print_term $_ANSI_COLOR_GREEN
	_print "[${SCRIPT_NAME}] "
	_print_term $_ANSI_RESET
	_print $1
	_print ' ['
	_print_term $_ANSI_ATTR_ITALIC
	if [[ -n $2 ]]; then
		_print $2
	else
		_print "(empty)"
	fi
	_print_term $_ANSI_RESET
	_print ']? '
}
version() {
	echo "$SCRIPT_NAME $SCRIPT_VERSION"
}
# OS detection
OS=`uname -s`
OSVERSION=`uname -r`
if [[ "$OS" == "Darwin" ]]; then
	OS="Mac OS X"
	OSVARIANT=$OS
	OSXVersion=`python3 -c 'import platform;print(platform.mac_ver()[0],end="")'`
	OSVERSION=$OSXVersion
else
	OS=`uname -o`
	if which lsb_release &>/dev/null; then
		OSVARIANT=`lsb_release -s -i`
	else
		OSVARIANT=$OS
	fi
	OSVERSION=`uname -r`
fi
if [[ "$1" == "--version" || "$1" == "-V" ]]; then
	version
	exit 0
fi
usage() {
	echo "Usage:"
	echo "  ${SCRIPT_NAME%%*/}"
	echo "  $SCRIPT_NAME [--version|--help]"
	echo
	echo "Options:"
	echo "  --version -V  Show the version and exit"
	echo "  --help    -h  Show this help and exit"
	echo
}



##########################################
# Ask the user for input
# 

message "Welcome to Flying Paste ./configure"
#message_debug ""

message_ask "Output path" "$FLYINGPASTE_INI"
read _input
if [[ -n $_input ]]; then
	FLYINGPASTE_INI="$_input"
fi

message_ask "Application path" "$CONFIG_OWNDIR"
read _input
if [[ -n $_input ]]; then
	CONFIG_OWNDIR="$_input"
fi

message_ask "Service URL" "$CONFIG_SERVICE_URL"
read _input
if [[ -n $_input ]]; then
	CONFIG_SERVICE_URL="$_input"
fi

message_ask "Service Name" "$CONFIG_SERVICE_NAME"
read _input
if [[ -n $_input ]]; then
	CONFIG_SERVICE_NAME="$_input"
fi

message_ask "MySQL/MariaDB host" "$CONFIG_MYSQL_HOST"
read _input
if [[ -n $_input ]]; then
	CONFIG_MYSQL_HOST="$_input"
fi

message_ask "MySQL/MariaDB user" "$CONFIG_MYSQL_USER"
read _input
if [[ -n $_input ]]; then
	CONFIG_MYSQL_USER="$_input"
fi

message_ask "MySQL/MariaDB password" "$CONFIG_MYSQL_PASSWORD"
read _input
CONFIG_MYSQL_PASSWORD="$_input"

message_ask "MySQL/MariaDB database" "$CONFIG_MYSQL_DB"
read _input
if [[ -n $_input ]]; then
	CONFIG_MYSQL_DB="$_input"
fi



##########################################
# Generate and save config
# 

cat <<EOF >$FLYINGPASTE_INI
; 
; Flying Paste Configuration
; â†’ Generated using ./configure
; 

; 
; Generic/instace config
; 
[APP]
; Where is flying paste installed (i.e. where are the templates etc.)
OWNDIR = $CONFIG_OWNDIR
; Where will the paste service be available to the public?
SERVICE_URL = $CONFIG_SERVICE_URL
; Name of the paste service (used in document titles)
SERVICE_NAME = $CONFIG_SERVICE_NAME
; Wether started for testing or productive use. WSGI is used if True.
PRODUCTIVE = False

; 
; Database (only MySQL supported at the moment)
; 
[DATABASE]
TYPE = MySQL                                 
MYSQL_HOST = $CONFIG_MYSQL_HOST 
MYSQL_USER = $CONFIG_MYSQL_USER 
MYSQL_PASSWORD = $CONFIG_MYSQL_PASSWORD 
MYSQL_DB = $CONFIG_MYSQL_DB 

EOF
message_debug "Stored config in \"${FLYINGPASTE_INI}\""

# The end :-)
